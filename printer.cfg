##### AUTOCREATED BY KIAUH #####
#[include kiauh.cfg]
[include client.cfg]
# This file contains common pin mappings for the 2018 Creality
# Ender 3. To use this config, the firmware should be compiled for the
# AVR atmega1284p.

# Note, a number of Melzi boards are shipped with a bootloader that
# requires the following command to flash the board:
#  avrdude -p atmega1284p -c arduino -b 57600 -P /dev/ttyUSB0 -U out/klipper.elf.hex
# If the above command does not work and "make flash" does not work
# then one may need to flash a bootloader to the board - see the
# Klipper docs/Bootloaders.md file for more information.

# See the example.cfg file for a description of available parameters.

[stepper_x]
step_pin: PD7
dir_pin: !PC5
enable_pin: !PD6
rotation_distance: 40
microsteps: 16
#full_steps_per_rotation: 200
endstop_pin: ^PC2
position_endstop: 0
position_min: -25.0
position_max: 240
homing_speed: 50

[extruder]
max_extrude_only_distance: 100.0
step_pin: PB1
dir_pin: !PB0
enable_pin: !PD6
microsteps: 16
#step_distance: 0.002395496  #BMG
#rotation_distance = <full_steps_per_rotation> * <microsteps> * <step_distance>
rotation_distance = 7.6655872
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA7
min_temp: 0
max_temp: 290
control: pid
# tuned for stock hardware with 200 degree Celsius target
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 250
    
[stepper_y]
step_pin: PC6
dir_pin: PC7
enable_pin: !PD6
rotation_distance: 40
microsteps: 16
#full_steps_per_rotation: 200
#step_distance: .0125
endstop_pin: ^PC3
position_endstop: -5.0
position_min: -15.0
position_max: 250
homing_speed: 50

[stepper_z]
step_pin: PB3
dir_pin: PB2
enable_pin: !PA5
microsteps: 16
rotation_distance: 8
endstop_pin: ^PC4
position_endstop: 0.5  #0.55  # 0.25
position_max: 250
position_min: -0.5

[heater_bed]
heater_pin: PD4
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA6
control: pid
# tuned for stock hardware with 50 degree Celsius target
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PB4

[include touch.cfg]
[include FWRT.cfg]

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 7000  #4000
max_accel_to_decel: 7000 #4000
max_z_velocity: 50
max_z_accel: 500

[input_shaper]
#shaper_freq_x: 34.48
#shaper_freq_y: 36.36
shaper_type: mzv

[display]
lcd_type: st7920
cs_pin: PA3
sclk_pin: PA1
sid_pin: PC1
encoder_pins: ^PD2, ^PD3
click_pin: ^!PC0
#display_group: _multiextruder_16x4

[respond]

# A virtual sdcard may be useful if the host machine is not fast
# enough to run OctoPrint well. It allows the Klipper host software to
# directly print gcode files stored in a directory on the host using
# standard sdcard G-Code commands (eg, M24).
[virtual_sdcard]
path: ~/gcode_files
#   The path of the local directory on the host machine to look for
#   g-code files. This is a read-only directory (sdcard file writes
#   are not supported).

[pause_resume]
#recover_velocity: 50.
#   When capture/restore is enabled, the speed at which to return to
#   the captured position (in mm/s). Default is 50.0 mm/s.

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None

[resonance_tester]
accel_chip: adxl345
probe_points:
    100,100,20  # an example

[temperature_sensor RPi_temp]
sensor_type: rpi_temperature

#todo
#[gcode_macro M73]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.188
#*# pid_ki = 1.303
#*# pid_kd = 131.594
#*#
#*# [input_shaper]
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 37.5
#*# shaper_type_x = 2hump_ei
#*# shaper_freq_x = 37.5
#*#
#*# [bed_mesh t75]
#*# version = 1
#*# points =
#*# 	0.322500, 0.302500, 0.297500, 0.300000, 0.310000, 0.312500
#*# 	0.330000, 0.305000, 0.302500, 0.297500, 0.292500, 0.297500
#*# 	0.302500, 0.277500, 0.282500, 0.280000, 0.297500, 0.310000
#*# 	0.300000, 0.282500, 0.282500, 0.290000, 0.297500, 0.300000
#*# 	0.310000, 0.297500, 0.307500, 0.315000, 0.335000, 0.362500
#*# 	0.310000, 0.302500, 0.322500, 0.337500, 0.347500, 0.372500
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 6
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 200.0
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.505000, 0.450000, 0.447500, 0.442500, 0.485000, 0.502500
#*# 	  0.527500, 0.485000, 0.457500, 0.455000, 0.475000, 0.487500
#*# 	  0.495000, 0.452500, 0.437500, 0.435000, 0.495000, 0.520000
#*# 	  0.517500, 0.485000, 0.445000, 0.445000, 0.455000, 0.485000
#*# 	  0.552500, 0.515000, 0.502500, 0.500000, 0.535000, 0.560000
#*# 	  0.557500, 0.512500, 0.490000, 0.495000, 0.520000, 0.550000
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 6
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 200.0
#*#
#*# [bed_mesh t90]
#*# version = 1
#*# points =
#*# 	0.352500, 0.340000, 0.372500, 0.380000, 0.402500, 0.417500
#*# 	0.372500, 0.357500, 0.375000, 0.367500, 0.360000, 0.387500
#*# 	0.337500, 0.340000, 0.340000, 0.325000, 0.365000, 0.387500
#*# 	0.345000, 0.332500, 0.347500, 0.342500, 0.377500, 0.400000
#*# 	0.345000, 0.332500, 0.375000, 0.370000, 0.432500, 0.477500
#*# 	0.340000, 0.352500, 0.375000, 0.392500, 0.430000, 0.442500
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 6
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 200.0
#*#
#*# [bed_mesh m50]
#*# version = 1
#*# points =
#*# 	0.410000, 0.370000, 0.342500, 0.337500, 0.357500, 0.397500
#*# 	0.425000, 0.382500, 0.345000, 0.335000, 0.350000, 0.382500
#*# 	0.392500, 0.357500, 0.335000, 0.332500, 0.360000, 0.407500
#*# 	0.390000, 0.357500, 0.332500, 0.332500, 0.357500, 0.400000
#*# 	0.385000, 0.362500, 0.345000, 0.352500, 0.395000, 0.442500
#*# 	0.382500, 0.362500, 0.347500, 0.357500, 0.392500, 0.440000
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 6
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 200.0
#*#
#*# [bed_mesh m110]
#*# version = 1
#*# points =
#*# 	  0.505000, 0.450000, 0.447500, 0.442500, 0.485000, 0.502500
#*# 	  0.527500, 0.485000, 0.457500, 0.455000, 0.475000, 0.487500
#*# 	  0.495000, 0.452500, 0.437500, 0.435000, 0.495000, 0.520000
#*# 	  0.517500, 0.485000, 0.445000, 0.445000, 0.455000, 0.485000
#*# 	  0.552500, 0.515000, 0.502500, 0.500000, 0.535000, 0.560000
#*# 	  0.557500, 0.512500, 0.490000, 0.495000, 0.520000, 0.550000
#*# tension = 0.2
#*# min_x = 30.0
#*# algo = lagrange
#*# y_count = 6
#*# mesh_y_pps = 2
#*# min_y = 30.0
#*# x_count = 6
#*# max_y = 200.0
#*# mesh_x_pps = 2
#*# max_x = 200.0
